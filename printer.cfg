[include flySB2040v2.cfg]
[include fan_tach_monitor.cfg]
[include fluidd.cfg]
[include macros\*.cfg]
[include K-ShakeTune/*.cfg]
[exclude_object]
[pause_resume]
[skew_correction]

[virtual_sdcard]
path: ~/printer_data/gcodes

[mcu]
#serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_30003B001951303439363932-if00
serial: /dev/ttyAMA0
restart_method: command

[printer]
kinematics: corexy
max_velocity: 450  
max_accel: 15000
max_z_velocity: 15			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
##	Connected to X-MOT (B Motor)
step_pin: PE11
dir_pin: !PE10
enable_pin: !PE9
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 400
position_min: -2.0
position_endstop: 300
position_max: 300
homing_speed: 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PE7
interpolate: false
run_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_y]
##	Connected to Y-MOT (A Motor)
step_pin: PD8
dir_pin: !PB12
enable_pin: !PD9
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 400
endstop_pin: ^PB13
position_min: -9
position_endstop: 300
position_max: 300
homing_speed: 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PE15
interpolate: false
run_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Z Stepper Settings
#####################################################################
#  Z0 Stepper - Front Left
[stepper_z]
step_pin: PE2
dir_pin: PE4
enable_pin: !PE3
rotation_distance: 4
full_steps_per_rotation: 200
microsteps: 32

# Z-Endstop (defined in Z0)
endstop_pin: ^PA0
#position_endstop: -0.5
position_max: 250
position_min: -8
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PC15
interpolate: false
run_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

## Z1 Stepper - Rear
[stepper_z1]
step_pin: PE6
dir_pin: PC13
enable_pin: !PE5
rotation_distance: 4
full_steps_per_rotation: 200
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC14
interpolate: false
run_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

## Z2 Stepper - Front Right
[stepper_z2]
step_pin: PD14
dir_pin: PD13
enable_pin: !PD15
rotation_distance: 4
full_steps_per_rotation: 200
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PD10
interpolate: false
run_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Chamber Control
#####################################################################

[heater_bed]
heater_pin: PB4
sensor_type: ATC Semitec 104GT-2 #[RMEL] First tried: Generic 3950. idk if it matters.
sensor_pin: PB0
max_power: 1
min_temp: 0
max_temp: 125
control: pid
pid_kp: 41.177
pid_ki: 0.950
pid_kd: 446.261

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PC1
min_temp: 0
max_temp: 100
gcode_id: C

#[heater_fan exhaust_fan]
##  Exhaust fan - In E2 OUT Positon
#pin: PB3
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

[controller_fan nevermore]
pin: PB2
kick_start_time: 0.500
fan_speed: 0.5

#####################################################################
#	Electronics Fans
#####################################################################

[multi_pin mcu_fans]
pins: PA13, PA14

[temperature_fan mcu_fan]
pin: multi_pin: mcu_fans
sensor_type: temperature_mcu
control: watermark
max_power: 0.4
shutdown_speed: 0.0
min_temp: 10
max_temp: 80
target_temp: 40

#####################################################################
#	LED Control
#####################################################################

[led chamber]
white_pin: PB3
initial_WHITE: 1.0

#####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
home_xy_position: 167.75, 300
speed: 100
z_hop: 10

[z_tilt]
z_positions:
   -50, 18
   150, 348
   350, 18
points:
   30, 5
   150, 245
   270, 5
speed: 200
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075

[bed_mesh]
speed: 300
horizontal_move_z: 5
mesh_min: 40, 40
mesh_max: 260,260
probe_count: 5,5
zero_reference_position: 150,150
fade_start: 1.0
fade_end: 10.0

#####################################################################
#	Displays
#####################################################################

# mini12864 LCD Display
[display]
lcd_type: uc1701
cs_pin: PC11
a0_pin: PD2
rst_pin: PC10
encoder_pins: ^PC6,^PC7
click_pin: ^!PA8
contrast: 63
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5

[neopixel fysetc_mini12864]
pin: PC12
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

# Set RGB values on boot up for each Neopixel. 
# Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#####################################################################
#	Macros
#####################################################################

# Fluidd macro overrides
[gcode_macro _CLIENT_VARIABLE]
#variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
#variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
#variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
#variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
#variable_retract          : 1.0   ; the value to retract while PAUSE
#variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract    : 35.0  ; retract speed in mm/s
#variable_unretract        : 1.0   ; the value to unretract while RESUME
#variable_speed_unretract  : 35.0  ; unretract speed in mm/s
#variable_speed_hop        : 15.0  ; z move speed in mm/s
#variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
#variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
#variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
#variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
#variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything insight the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything insight the "" will be executed before the klipper base resume (RESUME_BASE) function
variable_user_cancel_macro: "PRINT_END"    ; Everything insight the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = 1.788
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 67.0
#*# shaper_type_y = mzv
#*# shaper_freq_y = 46.4
#*#
#*# [bed_mesh cold]
#*# version = 1
#*# points =
#*# 	-0.051875, -0.045000, -0.030625, -0.040000, -0.051875
#*# 	-0.058125, -0.054375, -0.038750, -0.048750, -0.067500
#*# 	-0.063125, -0.051875, 0.000000, -0.053125, -0.080000
#*# 	-0.065625, -0.055625, -0.045625, -0.056875, -0.086875
#*# 	-0.061250, -0.057500, -0.049375, -0.068125, -0.099375
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 260.0
#*# min_y = 40.0
#*# max_y = 260.0
#*#
#*# [skew_correction CaliFlower]
#*# xy_skew = -0.005235114769012564
#*# xz_skew = 0.0
#*# yz_skew = 0.0
